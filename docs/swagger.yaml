basePath: /
definitions:
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API exemplo com documentação Swagger em Go + Gin
  title: API com Swagger - Exemplo
  version: "1.0"
paths:
  /admin/dashboard:
    get:
      description: Retorna uma mensagem de boas-vindas ao admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Dashboard do administrador
      tags:
      - admin
  /login:
    post:
      consumes:
      - application/json
      description: Autentica o usuário e retorna um token JWT
      parameters:
      - description: Credenciais
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - auth
  /profile:
    get:
      description: Retorna os dados do usuário autenticado via JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Ver perfil
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário com nome, email e senha
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registro de usuário
      tags:
      - auth
  /users/{id}:
    get:
      description: Retorna os dados de um usuário específico
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Buscar usuário por ID
      tags:
      - user
  /verify-email/{token}:
    get:
      description: Simula a verificação do email com um token
      parameters:
      - description: Token de verificação
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verificar email
      tags:
      - auth
swagger: "2.0"
